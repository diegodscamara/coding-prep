"What is React Native?","React Native is a framework for building native mobile apps using React. It compiles JavaScript to native components for iOS and Android."
"How is React Native different from React?","React targets the web DOM, while React Native targets mobile native views. Instead of <div>, <span>, etc., it uses components like <View> and <Text>."
"What are core components in React Native?","Some common core components are: View, Text, Image, TextInput, ScrollView, FlatList, TouchableOpacity."
"How does styling work in React Native?","React Native uses JavaScript objects for styling via the StyleSheet API, similar to inline CSS but with camelCased properties."
"How does navigation work in React Native?","Use the react-navigation library for stack, tab, and drawer navigation using navigators like createStackNavigator and createBottomTabNavigator."
"How do you access device features in React Native?","Use libraries like react-native-camera, react-native-geolocation, or APIs from Expo (if using Expo)."
"What is Expo and how does it differ from plain React Native?","Expo is a set of tools for building RN apps faster. It abstracts native modules, making setup easier, but limits customization unless ejected."
"How do you handle API calls in React Native?","Same as React: use fetch or axios inside useEffect. Handle loading, error, and response states."
"How do you test a React Native app?","Use Jest for unit tests, React Native Testing Library for components, and Detox or Appium for end-to-end testing."
"What is the difference between controlled and uncontrolled components in React Native?","Controlled components have their value controlled by React state, while uncontrolled ones rely on refs or internal state (e.g., TextInput)."
"How do you work with images in React Native?","Use the <Image> component. Source can be static (require) or dynamic (URI). Use resizeMode for layout control."
"What is FlatList and when should you use it?","FlatList efficiently renders large scrollable lists. It supports lazy loading and recycling of views for better performance."
"How does gesture handling work in React Native?","Use react-native-gesture-handler for complex gestures, or Touchable components for simple taps."
"How do you manage global state in React Native?","Use Context + useReducer, Redux Toolkit, Recoil, Zustand, or Jotai depending on complexity."
"How do you handle authentication in React Native?","Use secure storage (like react-native-keychain or expo-secure-store), and libraries like Firebase Auth, Auth0, or custom JWT logic."
"How do you implement navigation guards or conditional navigation?","Use listeners like 'beforeRemove' or conditionally navigate inside useEffect based on auth state or logic."
"How does hot reloading work in React Native?","Hot reloading updates changed code without losing state. Fast Refresh is the modern version of hot reload in RN."
"What is the difference between View and SafeAreaView?","SafeAreaView ensures content doesn't overlap notches or status bars on iOS. Use it as the root view when needed."
"How do you store data locally in React Native?","Use AsyncStorage (deprecated), @react-native-async-storage/async-storage, or MMKV for encrypted, fast local storage."
"How do you handle network errors and offline state?","Use NetInfo to monitor connectivity and conditionally show offline messages or queue requests."
"How do you make the UI responsive across different screen sizes?","Use Flexbox layout, Dimensions API, PixelRatio, or utility libraries like react-native-responsive-dimensions."
"How do you implement push notifications?","Use services like Firebase Cloud Messaging (FCM) with react-native-push-notification or Expo Notifications."
"How do you upload files or images in React Native?","Use react-native-image-picker or Expo ImagePicker, then upload via fetch/axios with FormData."
"What are native modules and how do you use them?","Native modules are platform-specific code (Java/Obj-C) exposed to JS. Use them via NativeModules or create custom ones."
"What are the benefits of using TypeScript in React Native?","TypeScript improves type safety, editor support, and refactoring. It prevents common bugs and improves maintainability."
"How do you mock native modules in tests?","Use Jest mocks and __mocks__ directory. Mock APIs from native modules (e.g., react-native-device-info) manually or with jest.mock."
"What is Metro bundler?","Metro is the default JS bundler for React Native. It handles module resolution, transpiling, and live reloading."
"What are common performance optimizations in React Native?","Use FlatList correctly, avoid inline functions, useMemo, memo, optimize image sizes, and batch state updates."
"What is bridging in React Native?","Bridging connects JavaScript and native code. It allows JS to call native modules and vice versa."
"How do you publish a React Native app to App Store and Google Play?","Build a release version (Xcode or Gradle), create store listings, sign the app, and upload via Transporter or Play Console." 