"What is the difference between var, let, and const?","var: function-scoped, hoisted (initialized with undefined); let: block-scoped, not hoisted; const: block-scoped, read-only (cannot be reassigned)"
"What is a closure?","A closure is a function that retains access to its lexical scope even when the function is executed outside of that scope."
"What is the difference between == and ===?","==: compares values after type coercion; ===: compares values and types (strict equality)"
"What is event delegation in JavaScript?","Event delegation is a technique of handling events at a higher level in the DOM rather than on each element. It uses event bubbling."
"Explain the event loop.","JavaScript runs on a single thread and uses an event loop to manage async operations. Tasks go through: Call Stack, Web APIs, Callback Queue, Event Loop."
"What are Promises and async/await?","A Promise is an object representing the eventual completion of an async operation. async/await is syntactic sugar for Promises, making async code easier to write/read."
"What is hoisting?","Hoisting is JavaScript's default behavior of moving declarations to the top of their scope before code execution. var is hoisted with value undefined, but let and const are not initialized."
"Explain prototypal inheritance.","JavaScript objects can inherit from other objects via the prototype chain. obj.__proto__ points to its prototype."
"What are higher-order functions?","Functions that take other functions as arguments or return them. Examples: map, filter, reduce."
"What is the difference between call(), apply(), and bind()?","call: calls function with this and individual args; apply: same, but with args as array; bind: returns a new function with bound this"
"What is the this keyword?","this refers to the execution context. Its value depends on how a function is called: Global context: window; Object method: the object; Arrow functions: lexically bound."
"Difference between shallow copy and deep copy?","Shallow copy copies object references (Object.assign, spread); Deep copy duplicates all levels (structuredClone, or JSON.parse(JSON.stringify(...)))."
"What are arrow functions and how are they different?","Arrow functions do not have their own this, arguments, or super. They're shorter and lexically bind this."
"How do you handle immutability in JavaScript?","Using spread syntax, Object.freeze, or libraries like Immer."
"What are modules in JavaScript?","Modules allow code reuse and separation. ES6 uses import/export."
"What is the difference between null and undefined?","null: intentional absence of value; undefined: variable declared but not assigned."
"What is the difference between synchronous and asynchronous code?","Synchronous code blocks execution; async code (like setTimeout, Promises) allows non-blocking behavior."
"What are template literals?","Template literals allow embedded expressions and multiline strings using backticks (`)."
"How does the 'typeof' operator work?","Returns a string indicating the type of the operand."
"How do you handle errors in JavaScript?","Use try/catch blocks or catch() with Promises. Use finally for cleanup."
"What is destructuring?","A concise way to extract values from arrays or objects."
"What are JavaScript data types?","Primitive: string, number, bigint, boolean, undefined, symbol, null; Non-primitive: object, array, function."
"What is a promise chain?","A series of .then() calls on a Promise to handle async steps in sequence."
"What is debounce and throttle?","Both control function execution rate: Debounce waits for pause; Throttle runs at intervals. Useful for scroll/input events."
"What are Map and Set?","Map stores key-value pairs, preserves insertion order. Set stores unique values only."
"What is object destructuring with default values?","Assign values with fallback."
"How do JavaScript arrays work internally?","Arrays are objects with numeric keys. JS engines optimize them for performance, but sparse arrays can be slower."
"What is the difference between forEach and map?","forEach: executes for side-effects, returns undefined; map: returns a new array."
"How can you clone an object in JavaScript?","Use spread {...obj}, Object.assign, or structuredClone for deep copy."
"What are Immediately Invoked Function Expressions (IIFE)?","Functions that run as soon as they are defined." 